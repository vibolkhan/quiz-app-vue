{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from \"@/router\";\nimport { mapActions } from \"vuex\";\nexport default {\n  data: () => ({\n    valid: true,\n    password: '',\n    isShow: false,\n    email: '',\n    islogin: false,\n    emailRules: [v => !!v || 'E-mail is required', v => /.+@.+\\..+/.test(v) || 'E-mail must be valid'],\n    rules: {\n      required: value => !!value || 'Required.',\n      min: v => v.length >= 3 || 'Min 3 characters',\n      emailMatch: () => `The email and password you entered don't match`\n    }\n  }),\n  methods: {\n    ...mapActions([\"login\"]),\n    clickLogin() {\n      this.login({\n        email: this.email,\n        password: this.password\n      });\n      this.islogin = true;\n    }\n  },\n  created() {\n    if (sessionStorage.getItem('token')) {\n      if (this.$route.meta.login) {\n        router.push('/quiz');\n      } else {\n        router.push('/');\n        sessionStorage.removeItem('token');\n        sessionStorage.removeItem('quizId');\n        sessionStorage.removeItem('userId');\n      }\n    } else {\n      router.push('/');\n    }\n  }\n};","map":{"version":3,"mappings":";AAqDA;AACA;AACA;EACAA;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC,aACAC,kCACAA,mDACA;IACAC;MACAC;MACAC;MACAC;IACA;EACA;EAEAC;IACA;IACAC;MACA;QAAAT;QAAAF;MAAA;MACA;IACA;EACA;EAEAY;IACA;MACA;QACAC;MACA;QACAA;QACAC;QACAA;QACAA;MACA;IACA;MACAD;IACA;EACA;AACA","names":["data","valid","password","isShow","email","islogin","emailRules","v","rules","required","min","emailMatch","methods","clickLogin","created","router","sessionStorage"],"sourceRoot":"src/views","sources":["LoginView.vue"],"sourcesContent":["<template>\r\n    <v-row justify=\"center\">\r\n        <v-col \r\n            cols=\"12\"\r\n            sm=\"8\"\r\n            md=\"5\"\r\n            lg=\"6\"\r\n            xl=\"4\"\r\n        >\r\n            <v-card\r\n                class=\"pa-9 mt-5\"\r\n            >\r\n                <v-card-header>\r\n                    <h1>Login Form</h1>\r\n                </v-card-header>\r\n                <v-divider class=\"mb-5 mt-3\"></v-divider>\r\n                <v-form\r\n                    ref=\"form\"\r\n                    v-model=\"valid\"\r\n                    lazy-validation\r\n                >\r\n                    <v-text-field\r\n                        v-model=\"email\"\r\n                        :rules=\"emailRules\"\r\n                        label=\"E-mail\"\r\n                        required\r\n                    ></v-text-field>\r\n                \r\n                    <v-text-field\r\n                        v-model=\"password\"\r\n                        :append-icon=\"isShow ? 'mdi-eye' : 'mdi-eye-off'\"\r\n                        :rules=\"[rules.required, rules.min]\"\r\n                        :type=\"isShow ? 'text' : 'password'\"\r\n                        label=\"Not visible\"\r\n                        hint=\"At least 8 characters\"\r\n                        class=\"input-group--focused\"\r\n                        @click:append=\"isShow = !isShow\"\r\n                    ></v-text-field>\r\n                    <small class=\"error--text mb-3\">invalid email or password</small>\r\n                    <v-btn\r\n                        width=\"100%\"\r\n                        color=\"accent\"\r\n                        class=\"px-5 mt-5o\"\r\n                        @click=\"clickLogin()\"\r\n                    >\r\n                        Login\r\n                    </v-btn>\r\n                </v-form>\r\n            </v-card>\r\n        </v-col>\r\n    </v-row>\r\n</template>\r\n<script>\r\nimport router from \"@/router\";\r\nimport { mapActions } from \"vuex\";\r\n    export default {\r\n        data: () => ({\r\n            valid: true,\r\n            password: '',\r\n            isShow: false,\r\n            email: '',\r\n            islogin: false,\r\n            emailRules: [\r\n                v => !!v || 'E-mail is required',\r\n                v => /.+@.+\\..+/.test(v) || 'E-mail must be valid',\r\n            ],\r\n            rules: {\r\n            required: value => !!value || 'Required.',\r\n            min: v => v.length >= 3 || 'Min 3 characters',\r\n            emailMatch: () => (`The email and password you entered don't match`),\r\n            },  \r\n        }),\r\n\r\n        methods: {\r\n            ...mapActions([\"login\"]),\r\n            clickLogin() {\r\n                this.login({email: this.email, password: this.password})\r\n                this.islogin = true\r\n            }\r\n        },\r\n\r\n        created() {\r\n            if (sessionStorage.getItem('token')) {\r\n                if (this.$route.meta.login) {\r\n                    router.push('/quiz')\r\n                } else {\r\n                    router.push('/')\r\n                    sessionStorage.removeItem('token')\r\n                    sessionStorage.removeItem('quizId')\r\n                    sessionStorage.removeItem('userId')\r\n                }\r\n            } else {\r\n                router.push('/')\r\n            }\r\n        }\r\n    }\r\n</script>"]},"metadata":{},"sourceType":"module"}
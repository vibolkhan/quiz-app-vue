{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\nimport LoginView from '../views/LoginView.vue';\nimport PageNotFound from '../components/page-notfound.vue';\nVue.use(VueRouter);\nconst routes = [{\n  path: '/',\n  name: 'login',\n  component: LoginView,\n  meta: {\n    hideNavbar: true,\n    login: true\n  }\n}, {\n  path: '/dashbord',\n  name: 'home',\n  component: HomeView,\n  meta: {\n    isAuthentication: true\n  }\n}, {\n  path: '/question',\n  name: 'question',\n  component: () => import('../views/AboutView.vue'),\n  meta: {\n    isAuthentication: true\n  }\n}, {\n  path: '/quiz',\n  name: 'quiz',\n  component: () => import('../views/QuizView.vue'),\n  meta: {\n    isAuthentication: true\n  }\n}, {\n  path: '/play/:quizId',\n  name: 'play',\n  component: () => import('../components/play-quiz.vue'),\n  meta: {\n    isAuthentication: true,\n    hideNavbar: true\n  }\n}, {\n  path: '/result',\n  name: 'result',\n  component: () => import('../components/result-view.vue'),\n  meta: {\n    isAuthentication: true\n  }\n}, {\n  path: '/logout',\n  name: 'logout',\n  component: LoginView,\n  meta: {\n    logout: true\n  }\n}, {\n  path: '/:pathMatch(.*)*',\n  component: PageNotFound,\n  meta: {\n    hideNavbar: true\n  }\n}, {\n  path: '/register',\n  name: 'register',\n  component: () => import('../components/result-view.vue')\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  if (to.meta.isAuthentication) {\n    if (!sessionStorage.getItem(\"token\")) {\n      next(\"/\");\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","HomeView","LoginView","PageNotFound","use","routes","path","name","component","meta","hideNavbar","login","isAuthentication","logout","router","mode","base","process","env","BASE_URL","beforeEach","to","from","next","sessionStorage","getItem"],"sources":["C:/Users/USer/Desktop/quiz folder/quiz-app-vue/front/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\nimport HomeView from '../views/HomeView.vue'\r\nimport LoginView from '../views/LoginView.vue'\r\nimport PageNotFound from '../components/page-notfound.vue'\r\n\r\nVue.use(VueRouter)\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'login',\r\n    component: LoginView,\r\n    meta: {\r\n      hideNavbar: true,\r\n      login: true\r\n    }\r\n  },\r\n  {\r\n    path: '/dashbord',\r\n    name: 'home',\r\n    component: HomeView,\r\n    meta:{\r\n      isAuthentication:true,\r\n    },\r\n  },\r\n  {\r\n    path: '/question',\r\n    name: 'question',\r\n    component: () => import('../views/AboutView.vue'),\r\n    meta:{\r\n      isAuthentication:true,\r\n    },\r\n  },\r\n  {\r\n    path: '/quiz',\r\n    name: 'quiz',\r\n    component: () => import('../views/QuizView.vue'),\r\n    meta:{\r\n      isAuthentication:true,\r\n    },\r\n  },\r\n  {\r\n    path: '/play/:quizId',\r\n    name: 'play',\r\n    component: () => import('../components/play-quiz.vue'),\r\n    meta:{\r\n      isAuthentication:true,\r\n      hideNavbar: true,\r\n    },\r\n  },\r\n  {\r\n    path: '/result',\r\n    name: 'result',\r\n    component: () => import('../components/result-view.vue'),\r\n    meta:{\r\n      isAuthentication:true,\r\n    },\r\n  },\r\n  {\r\n    path: '/logout',\r\n    name: 'logout',\r\n    component: LoginView,\r\n    meta: {\r\n      logout: true\r\n    }\r\n  },\r\n  {\r\n    path: '/:pathMatch(.*)*',\r\n    component: PageNotFound,\r\n    meta: {\r\n      hideNavbar: true,\r\n    }\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'register',\r\n    component: () => import('../components/result-view.vue'),\r\n  }\r\n]\r\n\r\nconst router = new VueRouter({\r\n  mode: 'history',\r\n  base: process.env.BASE_URL,\r\n  routes\r\n})\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  if (to.meta.isAuthentication) {\r\n    if (!sessionStorage.getItem(\"token\") ) {\r\n      next(\"/\");\r\n    } else {\r\n      next();\r\n    }\r\n  } \r\n  else {\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,YAAY,MAAM,iCAAiC;AAE1DJ,GAAG,CAACK,GAAG,CAACJ,SAAS,CAAC;AAElB,MAAMK,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEN,SAAS;EACpBO,IAAI,EAAE;IACJC,UAAU,EAAE,IAAI;IAChBC,KAAK,EAAE;EACT;AACF,CAAC,EACD;EACEL,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEP,QAAQ;EACnBQ,IAAI,EAAC;IACHG,gBAAgB,EAAC;EACnB;AACF,CAAC,EACD;EACEN,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAE,MAAM,MAAM,CAAC,wBAAwB,CAAC;EACjDC,IAAI,EAAC;IACHG,gBAAgB,EAAC;EACnB;AACF,CAAC,EACD;EACEN,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAE,MAAM,MAAM,CAAC,uBAAuB,CAAC;EAChDC,IAAI,EAAC;IACHG,gBAAgB,EAAC;EACnB;AACF,CAAC,EACD;EACEN,IAAI,EAAE,eAAe;EACrBC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAE,MAAM,MAAM,CAAC,6BAA6B,CAAC;EACtDC,IAAI,EAAC;IACHG,gBAAgB,EAAC,IAAI;IACrBF,UAAU,EAAE;EACd;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAE,MAAM,MAAM,CAAC,+BAA+B,CAAC;EACxDC,IAAI,EAAC;IACHG,gBAAgB,EAAC;EACnB;AACF,CAAC,EACD;EACEN,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAEN,SAAS;EACpBO,IAAI,EAAE;IACJI,MAAM,EAAE;EACV;AACF,CAAC,EACD;EACEP,IAAI,EAAE,kBAAkB;EACxBE,SAAS,EAAEL,YAAY;EACvBM,IAAI,EAAE;IACJC,UAAU,EAAE;EACd;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAE,MAAM,MAAM,CAAC,+BAA+B;AACzD,CAAC,CACF;AAED,MAAMM,MAAM,GAAG,IAAId,SAAS,CAAC;EAC3Be,IAAI,EAAE,SAAS;EACfC,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ;EAC1Bd;AACF,CAAC,CAAC;AAEFS,MAAM,CAACM,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,IAAIF,EAAE,CAACZ,IAAI,CAACG,gBAAgB,EAAE;IAC5B,IAAI,CAACY,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,EAAG;MACrCF,IAAI,CAAC,GAAG,CAAC;IACX,CAAC,MAAM;MACLA,IAAI,EAAE;IACR;EACF,CAAC,MACI;IACHA,IAAI,EAAE;EACR;AACF,CAAC,CAAC;AAEF,eAAeT,MAAM"},"metadata":{},"sourceType":"module"}
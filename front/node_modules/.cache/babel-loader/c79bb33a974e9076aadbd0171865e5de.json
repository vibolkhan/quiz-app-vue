{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nconst URL = 'http://localhost:3000/question';\nconst header = {\n  headers: {\n    Authorization: 'Bearer ' + sessionStorage.getItem('token')\n  }\n};\nconst state = {\n  questions: []\n};\nconst getters = {\n  allQuestion: state => state.questions\n};\nconst actions = {\n  async fetchQuestion({\n    commit\n  }) {\n    const id = sessionStorage.getItem('quizId');\n    const response = await axios.get(`${URL}/${id}`, header);\n    if (response) {\n      commit('setQuestions', response.data);\n    }\n  },\n  async deleteQuestion({\n    commit\n  }, id) {\n    await axios.delete(`${URL}/${id}`, header);\n    commit('deleteQuestion', id);\n  },\n  async createQuestion({\n    commit\n  }, body) {\n    await axios.post(URL, body, header);\n    commit('createQuestion', body);\n  },\n  async editQuestion({\n    commit\n  }, body) {\n    await axios.put(`${URL}/${body.id}`, body, header);\n    commit('editQuestion', body);\n  }\n};\nconst mutations = {\n  setQuestions: (state, questions) => state.questions = questions,\n  deleteQuestion: (state, id) => state.questions = state.questions.filter(question => question.id !== id),\n  createQuestion: (state, body) => state.questions.push(body),\n  editQuestion: (state, updTodo) => {\n    const index = state.questions.findIndex(question => question.id === updTodo.id);\n    if (index !== -1) {\n      state.questions.splice(index, 1, updTodo);\n    }\n  }\n};\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n};","map":{"version":3,"names":["axios","URL","header","headers","Authorization","sessionStorage","getItem","state","questions","getters","allQuestion","actions","fetchQuestion","commit","id","response","get","data","deleteQuestion","delete","createQuestion","body","post","editQuestion","put","mutations","setQuestions","filter","question","push","updTodo","index","findIndex","splice"],"sources":["C:/Users/USer/Desktop/quiz folder/quiz-app-vue/front/src/store/modules/question.js"],"sourcesContent":["import axios from \"axios\"\r\nconst URL = 'http://localhost:3000/question'\r\nconst header = { headers: {\r\n  Authorization: 'Bearer ' + sessionStorage.getItem('token'),\r\n}}\r\n\r\nconst state = {\r\n  questions: [],\r\n}\r\n\r\nconst getters = {\r\n  allQuestion: state => state.questions\r\n}\r\n\r\nconst actions = {\r\n  async fetchQuestion({ commit }) {\r\n    const id = sessionStorage.getItem('quizId')\r\n    const response = await axios.get(`${URL}/${id}`, header)\r\n    if (response) {\r\n      commit('setQuestions', response.data)\r\n    }\r\n  },\r\n\r\n  async deleteQuestion({ commit }, id) {\r\n    await axios.delete(`${URL}/${id}`, header)\r\n    commit('deleteQuestion', id)\r\n  },\r\n\r\n  async createQuestion({ commit }, body) {\r\n    await axios.post(URL, body, header)\r\n    commit('createQuestion', body)\r\n  },\r\n\r\n  async editQuestion({ commit }, body) {\r\n    await axios.put(`${URL}/${body.id}`, body,header)\r\n    commit('editQuestion', body)\r\n  },\r\n}\r\n\r\nconst mutations = {\r\n  setQuestions: (state, questions) => (state.questions = questions),\r\n  deleteQuestion: (state, id) => (state.questions = state.questions.filter(question => question.id !== id)),\r\n  createQuestion: (state, body) => (state.questions.push(body)),\r\n  editQuestion: (state, updTodo) => {\r\n    const index = state.questions.findIndex(question => question.id === updTodo.id)\r\n    if (index !== -1) {\r\n      state.questions.splice(index, 1, updTodo)\r\n    }\r\n  }\r\n}\r\n\r\nexport default {\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations,\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,GAAG,GAAG,gCAAgC;AAC5C,MAAMC,MAAM,GAAG;EAAEC,OAAO,EAAE;IACxBC,aAAa,EAAE,SAAS,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO;EAC3D;AAAC,CAAC;AAEF,MAAMC,KAAK,GAAG;EACZC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,OAAO,GAAG;EACdC,WAAW,EAAEH,KAAK,IAAIA,KAAK,CAACC;AAC9B,CAAC;AAED,MAAMG,OAAO,GAAG;EACd,MAAMC,aAAa,CAAC;IAAEC;EAAO,CAAC,EAAE;IAC9B,MAAMC,EAAE,GAAGT,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC3C,MAAMS,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAE,GAAEf,GAAI,IAAGa,EAAG,EAAC,EAAEZ,MAAM,CAAC;IACxD,IAAIa,QAAQ,EAAE;MACZF,MAAM,CAAC,cAAc,EAAEE,QAAQ,CAACE,IAAI,CAAC;IACvC;EACF,CAAC;EAED,MAAMC,cAAc,CAAC;IAAEL;EAAO,CAAC,EAAEC,EAAE,EAAE;IACnC,MAAMd,KAAK,CAACmB,MAAM,CAAE,GAAElB,GAAI,IAAGa,EAAG,EAAC,EAAEZ,MAAM,CAAC;IAC1CW,MAAM,CAAC,gBAAgB,EAAEC,EAAE,CAAC;EAC9B,CAAC;EAED,MAAMM,cAAc,CAAC;IAAEP;EAAO,CAAC,EAAEQ,IAAI,EAAE;IACrC,MAAMrB,KAAK,CAACsB,IAAI,CAACrB,GAAG,EAAEoB,IAAI,EAAEnB,MAAM,CAAC;IACnCW,MAAM,CAAC,gBAAgB,EAAEQ,IAAI,CAAC;EAChC,CAAC;EAED,MAAME,YAAY,CAAC;IAAEV;EAAO,CAAC,EAAEQ,IAAI,EAAE;IACnC,MAAMrB,KAAK,CAACwB,GAAG,CAAE,GAAEvB,GAAI,IAAGoB,IAAI,CAACP,EAAG,EAAC,EAAEO,IAAI,EAACnB,MAAM,CAAC;IACjDW,MAAM,CAAC,cAAc,EAAEQ,IAAI,CAAC;EAC9B;AACF,CAAC;AAED,MAAMI,SAAS,GAAG;EAChBC,YAAY,EAAE,CAACnB,KAAK,EAAEC,SAAS,KAAMD,KAAK,CAACC,SAAS,GAAGA,SAAU;EACjEU,cAAc,EAAE,CAACX,KAAK,EAAEO,EAAE,KAAMP,KAAK,CAACC,SAAS,GAAGD,KAAK,CAACC,SAAS,CAACmB,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAACd,EAAE,KAAKA,EAAE,CAAE;EACzGM,cAAc,EAAE,CAACb,KAAK,EAAEc,IAAI,KAAMd,KAAK,CAACC,SAAS,CAACqB,IAAI,CAACR,IAAI,CAAE;EAC7DE,YAAY,EAAE,CAAChB,KAAK,EAAEuB,OAAO,KAAK;IAChC,MAAMC,KAAK,GAAGxB,KAAK,CAACC,SAAS,CAACwB,SAAS,CAACJ,QAAQ,IAAIA,QAAQ,CAACd,EAAE,KAAKgB,OAAO,CAAChB,EAAE,CAAC;IAC/E,IAAIiB,KAAK,KAAK,CAAC,CAAC,EAAE;MAChBxB,KAAK,CAACC,SAAS,CAACyB,MAAM,CAACF,KAAK,EAAE,CAAC,EAAED,OAAO,CAAC;IAC3C;EACF;AACF,CAAC;AAED,eAAe;EACbvB,KAAK;EACLE,OAAO;EACPE,OAAO;EACPc;AACF,CAAC"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { mapGetters, mapActions } from \"vuex\";\nimport * as easings from 'vuetify/lib/services/goto/easing-patterns';\nexport default {\n  name: 'result-page',\n  data() {\n    return {\n      headers: [{\n        text: 'Title',\n        value: 'question'\n      }, {\n        text: 'Answers',\n        value: 'answer'\n      }, {\n        text: 'Action',\n        value: 'actions'\n      }],\n      index: 0,\n      selectedAnswer: null,\n      showResult: true,\n      type: 'number',\n      number: 9999,\n      selector: '#scroll-with-options',\n      selected: 'Button',\n      elements: ['Button', 'Radio group'],\n      duration: 300,\n      offset: 0,\n      easing: 'easeInOutCubic',\n      easings: Object.keys(easings)\n    };\n  },\n  props: {\n    answered: Array\n  },\n  methods: {\n    ...mapActions([\"fetchQuestion\", \"fetchHistory\"])\n  },\n  computed: {\n    ...mapGetters([\"allQuestion\", \"allHistory\"]),\n    target() {\n      const value = this[this.type];\n      if (!isNaN(value)) return Number(value);else return value;\n    },\n    options() {\n      return {\n        duration: this.duration,\n        offset: this.offset,\n        easing: this.easing\n      };\n    },\n    element() {\n      if (this.selected === 'Button') return this.$refs.button;else if (this.selected === 'Radio group') return this.$refs.radio;else return null;\n    }\n  },\n  mounted() {\n    this.fetchQuestion();\n    this.fetchHistory();\n    $vuetify.goTo(this.target, this.options);\n  }\n};","map":{"version":3,"mappings":"AAqDA;AACA;AAEA;EACAA;EACAC;IACA;MACAC,UACA;QAAAC;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,EACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EAEAC;IACAC;EACA;EAEAC;IACA;EACA;EAEAC;IACA;IACAC;MACA;MACA,6CACA;IACA;IACAC;MACA;QACAT;QACAC;QACAC;MACA;IACA;IACAQ;MACA,8DACA,kEACA;IACA;EACA;EAEAC;IACA;IACA;IACAC;EACA;AACA","names":["name","data","headers","text","value","index","selectedAnswer","showResult","type","number","selector","selected","elements","duration","offset","easing","easings","props","answered","methods","computed","target","options","element","mounted","$vuetify"],"sourceRoot":"src/components","sources":["result-view.vue"],"sourcesContent":["<template>\r\n    <v-row class=\"d-flex flex-column justify-center align-center\">\r\n        <v-col cols=6>\r\n            <v-card class=\"p-5 mt-9\">\r\n                <v-img src=\"https://www.imgacademy.com/themes/custom/imgacademy/images/helpbox-contact.jpg\"></v-img>\r\n            </v-card>\r\n            <v-card class=\"p-5 mt-3\">\r\n                <v-card-text>\r\n                    <div class=\"text-h5\">Your score is: {{allHistory[0].score}}/{{allHistory[0].answers.length}}</div>\r\n                    <v-divider class=\"mt-3 mb-5\"></v-divider>\r\n                    <div>Your response has been recorded. See you next time.</div>\r\n                </v-card-text>\r\n            </v-card>\r\n        </v-col>\r\n        <v-col cols=\"6\" class=\"py-0  mb-0\">\r\n            <p text class=\"text-right text-decoration-underline mb-0\" @click=\"showResult = !showResult\"><a class=\"blue--text\">See result</a></p>\r\n        </v-col>\r\n        <v-col cols=\"6\" v-if=\"showResult\">\r\n            <v-card\r\n                v-for=\"(question, i) in allQuestion\"\r\n                :key=\"i\"\r\n                class=\"mx-auto mt-3 elevation-5\"\r\n                \r\n            >    \r\n            <v-card-text>\r\n                <p class=\"pa-1 error--text \" v-if=\"allHistory[0].answers[i] == 'Null'\"> <v-icon color=\"error\">mdi-alert-outline</v-icon> You are not complete this question!</p>\r\n                <div class=\"text-h5\" :class=\"{'error--text': allHistory[0].answers[i] == 'Null'}\">{{i+1}}. {{question.question}}</div>\r\n                <v-spacer vertical></v-spacer>\r\n            </v-card-text>\r\n                <div class=\"text-center d-flex justify-center\">\r\n                    <v-img \r\n                        :src=\"'http://localhost:3000/uploads/'+question.image\" \r\n                        max-width=\"300px\"           \r\n                        max-height=\"300px\"         \r\n                    ></v-img>\r\n                </div>\r\n                <v-divider class=\"mb-3\"></v-divider>\r\n                <v-card-body>\r\n                    <v-list-item\r\n                        v-for=\"(item, index) in question.answer\"\r\n                        :key=\"index\"\r\n                        :value=\"index\"\r\n                    >\r\n                        <v-alert text class=\"black--text\" :class=\"{ 'red--text': allHistory[0].answers && allHistory[0].answers[i] == index, 'green--text': item.isCorrect}\" width=\"100%\">{{item.answerContent}}</v-alert>\r\n                    </v-list-item>\r\n                </v-card-body>\r\n            </v-card>\r\n        </v-col>\r\n        <v-col cols=\"6\" class=\"text-center\"><v-icon class=\"blue--text\">mdi-copyright</v-icon> vibol khan <a href=\"quiz\" class=\"blue--text\"> back</a></v-col>\r\n    </v-row>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from \"vuex\";\r\nimport * as easings from 'vuetify/lib/services/goto/easing-patterns'\r\n\r\nexport default {\r\n    name: 'result-page',\r\n    data() {\r\n        return {\r\n            headers: [\r\n                { text: 'Title', value: 'question' },\r\n                { text: 'Answers', value: 'answer' },\r\n                { text: 'Action', value: 'actions' },\r\n            ],\r\n            index: 0,\r\n            selectedAnswer: null,\r\n            showResult: true,\r\n            type: 'number',\r\n            number: 9999,\r\n            selector: '#scroll-with-options',\r\n            selected: 'Button',\r\n            elements: ['Button', 'Radio group'],\r\n            duration: 300,\r\n            offset: 0,\r\n            easing: 'easeInOutCubic',\r\n            easings: Object.keys(easings),\r\n        }\r\n    },\r\n\r\n    props: {\r\n        answered: Array\r\n    },\r\n\r\n    methods: {\r\n        ...mapActions([\"fetchQuestion\", \"fetchHistory\"]),\r\n    },\r\n\r\n    computed: {\r\n        ...mapGetters([\"allQuestion\", \"allHistory\"]),\r\n        target () {\r\n        const value = this[this.type]\r\n        if (!isNaN(value)) return Number(value)\r\n        else return value\r\n      },\r\n      options () {\r\n        return {\r\n          duration: this.duration,\r\n          offset: this.offset,\r\n          easing: this.easing,\r\n        }\r\n      },\r\n      element () {\r\n        if (this.selected === 'Button') return this.$refs.button\r\n        else if (this.selected === 'Radio group') return this.$refs.radio\r\n        else return null\r\n      },\r\n    },\r\n\r\n    mounted() {\r\n        this.fetchQuestion()\r\n        this.fetchHistory()\r\n        $vuetify.goTo(this.target, this.options)\r\n    },\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}